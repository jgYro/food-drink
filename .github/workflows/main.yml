# .github/workflows/version-bump.yml
name: Version Bump on PR to Production
on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - production

jobs:
  update-version:
    if: github.head_ref == 'dev'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: "3.10.0"
        
    - name: Increment bundle version
      id: increment-version
      run: |
        CURRENT_VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}')
        BASE_VERSION=$(echo "$CURRENT_VERSION" | cut -d"+" -f1)
        BUILD_NUMBER=$(echo "$CURRENT_VERSION" | cut -d"+" -f2)
        NEW_BUILD_NUMBER=$((BUILD_NUMBER + 1))
        NEW_VERSION="$BASE_VERSION+$NEW_BUILD_NUMBER"
        
        sed -i "s/version: $CURRENT_VERSION/version: $NEW_VERSION/" pubspec.yaml
        
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        
    - name: Commit and push changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add pubspec.yaml
        git commit -m "Increment bundle version to ${{ env.NEW_VERSION }}"
        git push origin HEAD:${{ github.head_ref }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

---
# .github/workflows/create-tag.yml
name: Create Tag After PR Merge
on:
  pull_request:
    types: [closed]
    branches:
      - production

jobs:
  create-tag:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Get version from pubspec.yaml
      id: get-version
      run: |
        VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}')
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        
    - name: Create and push tag
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "v${{ env.VERSION }}" -m "Release v${{ env.VERSION }}"
        git push origin "v${{ env.VERSION }}"
