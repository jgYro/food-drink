name: Version Bump on PR to Production
on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - production

jobs:
  update-version:
    # Only run this job if the PR is from the dev branch
    if: github.head_ref == 'dev'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}  # Checkout the PR branch (dev)
        fetch-depth: 0  # Ensures full git history is fetched
        token: ${{ secrets.PAT_TOKEN }}  # Use PAT for authentication
        
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: "3.10.0"
        
    - name: Increment bundle version
      id: increment-version
      run: |
        # Extract current version from pubspec.yaml
        CURRENT_VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}')
        BASE_VERSION=$(echo "$CURRENT_VERSION" | cut -d"+" -f1)
        BUILD_NUMBER=$(echo "$CURRENT_VERSION" | cut -d"+" -f2)
        NEW_BUILD_NUMBER=$((BUILD_NUMBER + 1))
        NEW_VERSION="$BASE_VERSION+$NEW_BUILD_NUMBER"
        
        # Update pubspec.yaml with the new version
        sed -i "s/version: $CURRENT_VERSION/version: $NEW_VERSION/" pubspec.yaml
        
        # Export variables for subsequent steps
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        echo "BASE_VERSION=$BASE_VERSION" >> $GITHUB_ENV
        echo "NEW_BUILD_NUMBER=$NEW_BUILD_NUMBER" >> $GITHUB_ENV
        
    - name: Commit version update
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add pubspec.yaml
        git commit -m "Increment bundle version to ${{ env.NEW_VERSION }}"
        
    - name: Push changes to PR branch
      run: git push origin HEAD:${{ github.head_ref }}
        
    - name: Create tag after PR is merged
      if: github.event.pull_request.merged == true
      run: |
        NEW_TAG="v${{ env.NEW_VERSION }}"
        git tag -a "$NEW_TAG" -m "Release $NEW_TAG"
        git push origin "$NEW_TAG"
